/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { MyToken, MyTokenInterface } from "../../contracts/MyToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Trasfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0604052600760809081526626bcaa37b5b2b760c91b60a052600090610026908261012f565b5060408051808201909152600381526213565560ea1b602082015260019061004e908261012f565b50620f424060025534801561006257600080fd5b50600380546001600160a01b03191633908117909155600254600091825260046020526040909120556101ee565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806100ba57607f821691505b6020821081036100da57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561012a57600081815260208120601f850160051c810160208610156101075750805b601f850160051c820191505b8181101561012657828155600101610113565b5050505b505050565b81516001600160401b0381111561014857610148610090565b61015c8161015684546100a6565b846100e0565b602080601f83116001811461019157600084156101795750858301515b600019600386901b1c1916600185901b178555610126565b600085815260208120601f198616915b828110156101c0578886015182559484019460019091019084016101a1565b50858210156101de5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61050f806101fd6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806306fdde031461006757806318160ddd1461008557806370a082311461009c5780638da5cb5b146100c557806395d89b41146100f0578063a9059cbb146100f8575b600080fd5b61006f61011b565b60405161007c919061038e565b60405180910390f35b61008e60025481565b60405190815260200161007c565b61008e6100aa3660046103c4565b6001600160a01b031660009081526004602052604090205490565b6003546100d8906001600160a01b031681565b6040516001600160a01b03909116815260200161007c565b61006f6101a9565b61010b6101063660046103df565b6101b6565b604051901515815260200161007c565b6000805461012890610409565b80601f016020809104026020016040519081016040528092919081815260200182805461015490610409565b80156101a15780601f10610176576101008083540402835291602001916101a1565b820191906000526020600020905b81548152906001019060200180831161018457829003601f168201915b505050505081565b6001805461012890610409565b3360009081526004602052604081205482111561020d5760405162461bcd60e51b81526020600482015260116024820152704e6f7420656e6f75676820746f6b656e7360781b604482015260640160405180910390fd5b6102316040518060600160405280602481526020016104b6602491393385856102cc565b3360009081526004602052604081208054849290610250908490610459565b90915550506001600160a01b0383166000908152600460205260408120805484929061027d90849061046c565b90915550506040518281526001600160a01b0384169033907f1fd6ebb971d137acf3f01670862b8a96758cfc7e39dccb093e68daf461b0262c9060200160405180910390a35060015b92915050565b610315848484846040516024016102e6949392919061047f565b60408051601f198184030181529190526020810180516001600160e01b0316638ef3f39960e01b17905261031b565b50505050565b61032481610327565b50565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b6000815180845260005b8181101561036e57602081850181015186830182015201610352565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006103a16020830184610348565b9392505050565b80356001600160a01b03811681146103bf57600080fd5b919050565b6000602082840312156103d657600080fd5b6103a1826103a8565b600080604083850312156103f257600080fd5b6103fb836103a8565b946020939093013593505050565b600181811c9082168061041d57607f821691505b60208210810361043d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156102c6576102c6610443565b808201808211156102c6576102c6610443565b6080815260006104926080830187610348565b6001600160a01b039586166020840152939094166040820152606001529291505056fe5472616e7366657272696e672066726f6d20257320746f20257320257320746f6b656e73a2646970667358221220c480997f0cb8780bbb463c7e77b8a7fdc03907e41079ff7d523635a6ec939a0764736f6c63430008130033";

type MyTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyToken__factory extends ContractFactory {
  constructor(...args: MyTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MyToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MyToken__factory {
    return super.connect(runner) as MyToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyTokenInterface {
    return new Interface(_abi) as MyTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MyToken {
    return new Contract(address, _abi, runner) as unknown as MyToken;
  }
}
